#!/usr/bin/env python

PACKAGE = "obstacle_detection"

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

gen.add("minPoints", int_t, 0, "minPoints", 5, 0, 100)
gen.add("epsilon", double_t, 0, "epsilon", 0.5, 0.0, 10.0)
gen.add("minClusterSize", int_t, 0, "minClusterSize", 3, 0, 10)
gen.add("maxClusterSize", int_t, 0, "maxClusterSize", 50, 10, 1000)

gen.add("xMinROI", double_t, 0, "xMinROI", 0.0, -30.0, 0.0)
gen.add("xMaxROI", double_t, 0, "xMaxROI", 3.5, 0.0, 30.0)
gen.add("yMinROI", double_t, 0, "yMinROI", -0.5, -30.0, 0.0)
gen.add("yMaxROI", double_t, 0, "yMaxROI", 0.5, 0.0, 30.0)
gen.add("zMinROI", double_t, 0, "zMinROI", -1.0, -2.0, 0.0)
gen.add("zMaxROI", double_t, 0, "zMaxROI", 1.0, 0.0, 2.0)

gen.add("xMinBoundingBox", double_t, 0, "xMinBoundingBox", 0.0, 0.0, 1.0);
gen.add("xMaxBoundingBox", double_t, 0, "xMaxBoundingBox", 10.0, 1.0, 10.0);
gen.add("yMinBoundingBox", double_t, 0, "yMinBoundingBox", 0.0, 0.0, 1.0);
gen.add("yMaxBoundingBox", double_t, 0, "yMaxBoundingBox", 10.0, 1.0, 10.0);
gen.add("zMinBoundingBox", double_t, 0, "zMinBoundingBox", 0.0, 0.0, 1.0);
gen.add("zMaxBoundingBox", double_t, 0, "zMaxBoundingBox", 10.0, 0.0, 10.0);

exit(gen.generate(PACKAGE, "obstacle_detection", "dy_hyper_parameter"))
